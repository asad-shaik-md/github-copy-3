name: Build Executables for All Platforms

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            platform: windows
            arch: x64
            executable-suffix: .exe
            build-script: build_executable.bat
          - os: macos-latest
            platform: macos
            arch: arm64
            executable-suffix: ""
            build-script: ./build_executable.sh
          - os: macos-13  # Intel Mac
            platform: macos
            arch: x64
            executable-suffix: ""
            build-script: ./build_executable.sh
          - os: ubuntu-latest
            platform: linux
            arch: x64
            executable-suffix: ""
            build-script: ./build_executable.sh

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install dependencies (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Install dependencies (Unix)
      if: matrix.os != 'windows-latest'
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Build executable (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        pyinstaller attendance_checker.spec --clean
        dir dist

    - name: Build executable (Unix)
      if: matrix.os != 'windows-latest'
      run: |
        chmod +x build_executable.sh
        pyinstaller attendance_checker.spec --clean
        ls -la dist/

    - name: Create distribution package
      run: |
        python create_distribution_package.py --platform ${{ matrix.platform }} --arch ${{ matrix.arch }}

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: JainAttendanceChecker-${{ matrix.platform }}-${{ matrix.arch }}
        path: distributions/JainAttendanceChecker_${{ matrix.platform }}_${{ matrix.arch }}_*.zip
        retention-days: 30

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v3

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          JainAttendanceChecker-*/JainAttendanceChecker_*.zip
        generate_release_notes: true
        body: |
          ## Jain University Attendance Checker - Universal Release
          
          ### Available Platforms:
          - **Windows** (64-bit): `JainAttendanceChecker_windows_x64_*.zip`
          - **macOS Apple Silicon** (M1/M2/M3): `JainAttendanceChecker_macos_arm64_*.zip`
          - **macOS Intel**: `JainAttendanceChecker_macos_x64_*.zip`
          - **Linux** (64-bit): `JainAttendanceChecker_linux_x64_*.zip`
          
          ### Requirements:
          - Chrome browser must be installed
          - No Python installation required
          - Extract and run the executable
          
          ### Usage:
          1. Download the zip for your platform
          2. Extract the zip file
          3. Install Chrome if not already installed
          4. Run the executable or launcher script
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}